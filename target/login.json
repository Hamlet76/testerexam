[
  {
    "line": 1,
    "elements": [
      {
        "before": [
          {
            "result": {
              "duration": 4272626634,
              "status": "passed"
            },
            "match": {
              "location": "Hooks.beforeScenario(Scenario)"
            }
          }
        ],
        "line": 13,
        "name": "Registered and approved user must be able to login",
        "description": "",
        "id": "user-login;registered-and-approved-user-must-be-able-to-login;;2",
        "after": [
          {
            "result": {
              "duration": 136722814,
              "status": "passed"
            },
            "match": {
              "location": "Hooks.afterScenario(Scenario)"
            }
          }
        ],
        "type": "scenario",
        "keyword": "Scenario Outline",
        "steps": [
          {
            "result": {
              "duration": 849110388,
              "status": "passed"
            },
            "line": 7,
            "name": "the user is on website home",
            "match": {
              "location": "GivenSteps.theUserIsOnWebsiteHome()"
            },
            "keyword": "Given "
          },
          {
            "result": {
              "duration": 704398733,
              "status": "passed"
            },
            "line": 8,
            "name": "the user login with \"testuser\" and \"test123\"",
            "match": {
              "arguments": [
                {
                  "val": "testuser",
                  "offset": 21
                },
                {
                  "val": "test123",
                  "offset": 36
                }
              ],
              "location": "WhenSteps.theUserLoginWith(String,String)"
            },
            "matchedColumns": [
              0,
              1
            ],
            "keyword": "When "
          },
          {
            "result": {
              "duration": 109989059,
              "error_message": "java.lang.AssertionError\n\tat org.junit.Assert.fail(Assert.java:86)\n\tat org.junit.Assert.assertTrue(Assert.java:41)\n\tat org.junit.Assert.assertTrue(Assert.java:52)\n\tat io.autotest.steps.ThenSteps.theUserIsOnDashboard(ThenSteps.java:22)\n\tat ✽.Then the user is on dashboard(cucumber-feature/login.feature:9)\n",
              "status": "failed"
            },
            "line": 9,
            "name": "the user is on dashboard",
            "match": {
              "location": "ThenSteps.theUserIsOnDashboard()"
            },
            "keyword": "Then "
          }
        ]
      },
      {
        "before": [
          {
            "result": {
              "duration": 2909441889,
              "status": "passed"
            },
            "match": {
              "location": "Hooks.beforeScenario(Scenario)"
            }
          }
        ],
        "line": 14,
        "name": "Registered and approved user must be able to login",
        "description": "",
        "id": "user-login;registered-and-approved-user-must-be-able-to-login;;3",
        "after": [
          {
            "result": {
              "duration": 114773762,
              "status": "passed"
            },
            "match": {
              "location": "Hooks.afterScenario(Scenario)"
            }
          }
        ],
        "type": "scenario",
        "keyword": "Scenario Outline",
        "steps": [
          {
            "result": {
              "duration": 711658075,
              "status": "passed"
            },
            "line": 7,
            "name": "the user is on website home",
            "match": {
              "location": "GivenSteps.theUserIsOnWebsiteHome()"
            },
            "keyword": "Given "
          },
          {
            "result": {
              "duration": 615100868,
              "status": "passed"
            },
            "line": 8,
            "name": "the user login with \"testuser2\" and \"test123\"",
            "match": {
              "arguments": [
                {
                  "val": "testuser2",
                  "offset": 21
                },
                {
                  "val": "test123",
                  "offset": 37
                }
              ],
              "location": "WhenSteps.theUserLoginWith(String,String)"
            },
            "matchedColumns": [
              0,
              1
            ],
            "keyword": "When "
          },
          {
            "result": {
              "duration": 58353883,
              "error_message": "java.lang.AssertionError\n\tat org.junit.Assert.fail(Assert.java:86)\n\tat org.junit.Assert.assertTrue(Assert.java:41)\n\tat org.junit.Assert.assertTrue(Assert.java:52)\n\tat io.autotest.steps.ThenSteps.theUserIsOnDashboard(ThenSteps.java:22)\n\tat ✽.Then the user is on dashboard(cucumber-feature/login.feature:9)\n",
              "status": "failed"
            },
            "line": 9,
            "name": "the user is on dashboard",
            "match": {
              "location": "ThenSteps.theUserIsOnDashboard()"
            },
            "keyword": "Then "
          }
        ]
      },
      {
        "before": [
          {
            "result": {
              "duration": 1109250831,
              "status": "passed"
            },
            "match": {
              "location": "Hooks.beforeScenario(Scenario)"
            }
          }
        ],
        "line": 23,
        "name": "Registered but not approved user cannot login",
        "description": "",
        "id": "user-login;registered-but-not-approved-user-cannot-login;;2",
        "after": [
          {
            "result": {
              "duration": 101548455,
              "status": "passed"
            },
            "match": {
              "location": "Hooks.afterScenario(Scenario)"
            }
          }
        ],
        "type": "scenario",
        "keyword": "Scenario Outline",
        "steps": [
          {
            "result": {
              "duration": 640075434,
              "status": "passed"
            },
            "line": 17,
            "name": "the user is on website home",
            "match": {
              "location": "GivenSteps.theUserIsOnWebsiteHome()"
            },
            "keyword": "Given "
          },
          {
            "result": {
              "duration": 484022883,
              "status": "passed"
            },
            "line": 18,
            "name": "the user login with \"user\" and \"test123\"",
            "match": {
              "arguments": [
                {
                  "val": "user",
                  "offset": 21
                },
                {
                  "val": "test123",
                  "offset": 32
                }
              ],
              "location": "WhenSteps.theUserLoginWith(String,String)"
            },
            "matchedColumns": [
              0,
              1
            ],
            "keyword": "When "
          },
          {
            "result": {
              "duration": 52232893,
              "status": "passed"
            },
            "line": 19,
            "name": "the user is on homepage with login error message",
            "match": {
              "location": "ThenSteps.theUserIsOnHomepageWithLoginErrorMessage()"
            },
            "keyword": "Then "
          }
        ]
      },
      {
        "before": [
          {
            "result": {
              "duration": 1008808888,
              "status": "passed"
            },
            "match": {
              "location": "Hooks.beforeScenario(Scenario)"
            }
          }
        ],
        "line": 24,
        "name": "Registered but not approved user cannot login",
        "description": "",
        "id": "user-login;registered-but-not-approved-user-cannot-login;;3",
        "after": [
          {
            "result": {
              "duration": 106741438,
              "status": "passed"
            },
            "match": {
              "location": "Hooks.afterScenario(Scenario)"
            }
          }
        ],
        "type": "scenario",
        "keyword": "Scenario Outline",
        "steps": [
          {
            "result": {
              "duration": 605409610,
              "status": "passed"
            },
            "line": 17,
            "name": "the user is on website home",
            "match": {
              "location": "GivenSteps.theUserIsOnWebsiteHome()"
            },
            "keyword": "Given "
          },
          {
            "result": {
              "duration": 576300900,
              "status": "passed"
            },
            "line": 18,
            "name": "the user login with \"user2\" and \"test123\"",
            "match": {
              "arguments": [
                {
                  "val": "user2",
                  "offset": 21
                },
                {
                  "val": "test123",
                  "offset": 33
                }
              ],
              "location": "WhenSteps.theUserLoginWith(String,String)"
            },
            "matchedColumns": [
              0,
              1
            ],
            "keyword": "When "
          },
          {
            "result": {
              "duration": 57898081,
              "status": "passed"
            },
            "line": 19,
            "name": "the user is on homepage with login error message",
            "match": {
              "location": "ThenSteps.theUserIsOnHomepageWithLoginErrorMessage()"
            },
            "keyword": "Then "
          }
        ]
      },
      {
        "before": [
          {
            "result": {
              "duration": 1239938473,
              "status": "passed"
            },
            "match": {
              "location": "Hooks.beforeScenario(Scenario)"
            }
          }
        ],
        "line": 33,
        "name": "Unregistered user cannot login",
        "description": "",
        "id": "user-login;unregistered-user-cannot-login;;2",
        "after": [
          {
            "result": {
              "duration": 110021449,
              "status": "passed"
            },
            "match": {
              "location": "Hooks.afterScenario(Scenario)"
            }
          }
        ],
        "type": "scenario",
        "keyword": "Scenario Outline",
        "steps": [
          {
            "result": {
              "duration": 637601207,
              "status": "passed"
            },
            "line": 27,
            "name": "the user is on website home",
            "match": {
              "location": "GivenSteps.theUserIsOnWebsiteHome()"
            },
            "keyword": "Given "
          },
          {
            "result": {
              "duration": 488914538,
              "status": "passed"
            },
            "line": 28,
            "name": "the user login with \"anyone\" and \"anypassword\"",
            "match": {
              "arguments": [
                {
                  "val": "anyone",
                  "offset": 21
                },
                {
                  "val": "anypassword",
                  "offset": 34
                }
              ],
              "location": "WhenSteps.theUserLoginWith(String,String)"
            },
            "matchedColumns": [
              0,
              1
            ],
            "keyword": "When "
          },
          {
            "result": {
              "duration": 53138828,
              "status": "passed"
            },
            "line": 29,
            "name": "the user is on homepage with login error message",
            "match": {
              "location": "ThenSteps.theUserIsOnHomepageWithLoginErrorMessage()"
            },
            "keyword": "Then "
          }
        ]
      },
      {
        "before": [
          {
            "result": {
              "duration": 1226625372,
              "status": "passed"
            },
            "match": {
              "location": "Hooks.beforeScenario(Scenario)"
            }
          }
        ],
        "line": 34,
        "name": "Unregistered user cannot login",
        "description": "",
        "id": "user-login;unregistered-user-cannot-login;;3",
        "after": [
          {
            "result": {
              "duration": 136364024,
              "status": "passed"
            },
            "match": {
              "location": "Hooks.afterScenario(Scenario)"
            }
          }
        ],
        "type": "scenario",
        "keyword": "Scenario Outline",
        "steps": [
          {
            "result": {
              "duration": 607488823,
              "status": "passed"
            },
            "line": 27,
            "name": "the user is on website home",
            "match": {
              "location": "GivenSteps.theUserIsOnWebsiteHome()"
            },
            "keyword": "Given "
          },
          {
            "result": {
              "duration": 516636003,
              "status": "passed"
            },
            "line": 28,
            "name": "the user login with \"anyone\" and \"test123\"",
            "match": {
              "arguments": [
                {
                  "val": "anyone",
                  "offset": 21
                },
                {
                  "val": "test123",
                  "offset": 34
                }
              ],
              "location": "WhenSteps.theUserLoginWith(String,String)"
            },
            "matchedColumns": [
              0,
              1
            ],
            "keyword": "When "
          },
          {
            "result": {
              "duration": 59043887,
              "status": "passed"
            },
            "line": 29,
            "name": "the user is on homepage with login error message",
            "match": {
              "location": "ThenSteps.theUserIsOnHomepageWithLoginErrorMessage()"
            },
            "keyword": "Then "
          }
        ]
      }
    ],
    "name": "User login",
    "description": "Those users who are registered via sign up form, and approved by admin to join home can login\nPrerequirement of this is none of the user should be logged in to system with the browser being used\n(clearing cache will do just fine)",
    "id": "user-login",
    "keyword": "Feature",
    "uri": "cucumber-feature/login.feature"
  }
]